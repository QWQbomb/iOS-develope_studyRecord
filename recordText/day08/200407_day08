在 ViewController.m 中
[super viewDidLoad]
// scrollView Window's width & height
	CGFloat width = self.scrollView.frame.size.width;
	CGFloat height = self.scrollView.frame.size.height;
	/** 定时器 */
	@property (nonatomic, strong) NSTimer *timer;
/**---------------	
//1.Add First Pic
	UIImageView *imageView = [[UIImageView alloc] init];
	imageView.image = [UIImage imageNamed:@"car1"];
	imageView.frame = CGRectMake(0, 0, width, height);
	[self.scrollView addSubview:imageView];

//1.Add Second Pic
	UIImageView *imageView2 = [[UIImageView alloc] init];
	imageView2.image = [UIImage imageNamed:@"car2"];
	imageView2.frame = CGRectMake(width, 0, width, height);
	[self.scrollView addSubview:imageView2];
	
//1.Add Third Pic
	UIImageView *imageView3 = [[UIImageView alloc] init];
	imageView3.image = [UIImage imageNamed:@"car3"];
	imageView3frame = CGRectMake(width*2, 0, width, height);
	[self.scrollView addSubview:imageView3];

//2.Set scrollView's contentSize
	self.scrollView.contentSize = CGSizeMake(width*3, 0);
	--------------*/
		
//Use For-Loop to conduct above
	int count = 5;

	for (int i=0; i<count; i++){
		UIImageView *imageView = [[UIImageView alloc] init];
		NSString *name = [NSString stringWithFormat:@"car%d",i+1];
		imageView.frame = CGRectMake(width * i, 0, width, height);
		[self.scrollView addSubview:imageView];
	}
	
//2.Set scrollView's contentSize
	self.scrollView.contentSize = CGSizeMake(width * count, 0);

//3.Open Page-depart 开启分页功能
	self.scrollView.pagingEnabled = YES;
	
//4.Close Rolling-Bar 关闭滚动条
	self.scrollView.showsHorizontalScrollIndicator = NO;

Page Control 分页显示的点
Current Page 当前页颜色
Tint Color 其他默认颜色

//5.Whole Page Numbers 设置总页数
	self.pageControl.numberOfPages = count;
	
//6.Set Current Page 设置当前页
		
//7. 单页时隐藏小点
	if(count<=1){
		self.pageControl.alpha = 0;
	}
	
//8.添加定时滚动
	self.timer = [NSTimer scheduledTimerWithTimeInterval:2.0 target:self
		selector:@selector(nextPage) userInfo:nil repeates:YES];
// @interface ScrollViewController ()<UIScrollViewDelegate>
/** 滚动到下一页 */
-(void)nextPage{
	//1.计算下一页页码
	NSInteger page = self.pageControl.currentPage + 1;
	//2.超过最后一页
	if(page == 5){
		page = 0;
	}
	//3.添加动画滚动到下一页
	self.scrollView.setContentOffset:CGPointMake(self.scrollView.size.width*page, 0) 
		animiated:YES];//自动产生的动画效果
	//NSLog(@"----next----");
}
/** 当用户即将拖拽时，停止定时器 */
-(void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{
	[self.timer invalidate];
	self.timer = nil;
}
/** 当用户停止拖拽时，开启定时器 */
-(void)scrollViewDidEndDragging:(UIScrollView *)scrollView{
	self.timer = [NSTimer scheduledTimerWithTimeInterval:2.0 target:self
		selector:@selector(nextPage) userInfo:nil repeates:YES];
}
/** 减速完毕调用的方法 */
-(void)scrollViewDidEndDecelerating:(UIImageView *)scrollView{
	//1.计算页码
	int page = scrollView.contentOffset.x
		/scrollView.frame.size.width;
	//2.设置页码
	self.pageControl.currentPage = page;
}

/** 滚动超过一半内容就自动切换页码小点 */
-(void)scrollViewDidEndScroll:(UIImageView *)scrollView{
	//1.计算页码 需要进行四舍五入
	int page = (int)(scrollView.contentOffset.x
		/scrollView.frame.size.width + 0.5);
	//2.设置页码
	self.pageControl.currentPage = page;	
}

/** -----------用Xib方式实现----------- */
选择 Empty 创建XIB

/** 提供快速构造方法 */
+(instancetype)pageView;
/** 图片名数据 */
@property (nonatomic,strong) NSArray *imageNames;
@@end


+(instancetype)pageView{
	return [[[NSBundle mainBundle] loadNibNamed:@"PageView"
		owner:nil options:nil] lastObject];
}

-(void)viewDidLoad{
	[super viewDidLoad];
	PageView *pageView = [PageView pageView];
	PageView.backgroundColor = [UIColor yellowColor];
	pageView.frame = CGRectMake(0, 50, 414, 200);
		pageView.imageNames=@
		[@"car1",@"car2",@"car3",@"car4"];
	[self.view addSubview:pageView];
}
/* PageView.h 中 **/
//设一个类拓展
@interface PageView()
@property (weak, nonatomic) IBOutlet UIScrollView *scrollView;
@property (weak, nonatomic) IBOutlet UIPageControl *pageControl;
@property (strong, nonatomic) 定时器
-(void)setImageNames:(NSArray *)imageNames{
	......
	NSInteger count = imageNames.count;
}



